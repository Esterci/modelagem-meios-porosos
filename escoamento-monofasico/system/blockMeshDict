/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// convertToMeters 0.1;

vertices
(
    ( 0    0    0  )    // vertex number 0
    ( 3    0    0  )    // vertex number 1
    ( 3    1    0  )    // vertex number 2
    ( 0    1    0  )    // vertex number 3
    ( 3    2    0  )    // vertex number 4
    ( 0    2    0  )    // vertex number 5
    ( 3    3    0  )    // vertex number 6
    ( 0    3    0  )    // vertex number 7

    ( 0    0    0.1  )    // vertex number 8
    ( 3    0    0.1  )    // vertex number 9
    ( 3    1    0.1  )    // vertex number 10
    ( 0    1    0.1  )    // vertex number 11
    ( 3    2    0.1  )    // vertex number 12
    ( 0    2    0.1  )    // vertex number 13
    ( 3    3    0.1  )    // vertex number 14
    ( 0    3    0.1  )    // vertex number 15



);

blocks
(
    hex (0 1 2 3 8 9 10 11) (140 80 1) simpleGrading (1 1 1)
    hex (3 2 4 5 11 10 12 13) (140 80 1) simpleGrading (1 1 1)
    hex (5 4 6 7 13 12 14 15) (140 80 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(
    inlet1
    {
        type wall;
        faces
        (
            (3 11 13 5)
        );
    }

    inlet2
    {
        type wall;
        faces
        (
            (1 2 10 9)
        );
    }

    inlet3
    {
        type wall;
        faces
        (
            (4 6 14 12)
        );
    }

    left
    {
        type wall;
        faces
        (
            (0 8 11 3)
            (5 13 15 7)
        );
    }

    right
    {
        type wall;
        faces
        (
            (2 4 12 10)
        );
    }

    up
    {
        type wall;
        faces
        (
            (6 7 15 14)
        );
    }

    down
    {
        type wall;
        faces
        (
            (0 1 9 8)
        );
    }

    emptyWalls
    {
        type empty;
        faces
        (   
            // Positivo z
	        (8 9 10 11)
            (11 10 12 13)
            (13 12 14 15)

            // Negativo z
            (0 3 2 1)
            (3 5 4 2)
            (5 7 6 4)
        );
    }

);

mergePatchPairs
(
);

// ************************************************************************* //
